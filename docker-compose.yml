version: '3.8'

services:
  mosquitto:
    image: eclipse-mosquitto:latest
    ports:
      - "1883:1883"
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    restart: unless-stopped
    networks:
      - my_network
    deploy:
      resources:
        limits:
          memory: 100M

  mongo:
    image: mongo:latest
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongoadmin
      - MONGO_INITDB_ROOT_PASSWORD=secret
    restart: unless-stopped
    networks:
      - my_network
    deploy:
      resources:
        limits:
          memory: 100M

  server:
    build: ./server/
    volumes:
      - ./server/:/usr/src/app
    depends_on:
      - mosquitto
      - mongo
    environment:
      - MQTT_BROKER=mosquitto
      - MQTT_PORT=1883
    networks:
      - my_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 100M
  
  test_client:
    build: ./test_client/
    volumes:
      - ./test_client/:/usr/src/app
    depends_on:
      - mosquitto
      - mongo
    networks:
      - my_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 100M
  
  mongo-express:
    image: mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongoadmin
      ME_CONFIG_MONGODB_ADMINPASSWORD: secret
      ME_CONFIG_MONGODB_SERVER: mongo
    networks:
      - my_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 100M

  postgres:
    image: postgres:12
    environment:
      POSTGRES_USER: mlflow
      POSTGRES_PASSWORD: mlflow
      POSTGRES_DB: mlflow
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - my_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 100M

  mlflow:
    build: ./mlflow
    depends_on:
      - postgres
    ports:
      - "5000:5000"
    environment:
      MLFLOW_BACKEND_STORE_URI: postgresql://mlflow:mlflow@postgres/mlflow
      MLFLOW_ARTIFACT_ROOT: /mlflow/artifacts
    volumes:
      - ./artifacts:/mlflow/artifacts
    networks:
      - my_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1024M
  
  learner:
    build: ./learner
    volumes:
      - ./learner:/usr/src/app
    depends_on:
      - mongo
      - mlflow
    environment:
      - MONGODB_URI=mongodb://mongo:27017/
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    networks:
      - my_network
    # restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2048M
  
  streamlit:
    build: ./streamlit
    ports:
      - "8501:8501"
    volumes:
      - ./streamlit:/app
    working_dir: /app
    depends_on:
      - server
    networks:
      - my_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M

volumes:
  mongo_data:
    driver: local
  postgres-data:
    driver: local
  artifacts:
    driver: local
  
networks:
  my_network:
    driver: bridge